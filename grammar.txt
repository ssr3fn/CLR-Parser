Prog -> Header FuncDef MainBody
Header -> epsilon
Header -> #include < ID > Header
Id_Type -> int
Id_Type -> float
Id_Type -> void
FuncList -> epsilon
FuncList -> FuncDef FuncList
FuncDef -> epsilon
FuncDef -> Id_Type ID ( FuncArgmt ) { stmts } FuncDef
FuncArgmt -> epsilon
FuncArgmt -> Id_Type ID , FuncArgmt
FuncArgmt -> Id_Type ID
MainBody -> epsilon
MainBody -> int main ( ) { stmts }
stmts -> epsilon
stmts -> stmt ; stmts
stmt -> ReturnStmt
stmt -> Input_Stmt
stmt -> Output_Stmt
stmt -> IfElse_Stmt
stmt -> ExpStmt
stmt -> BreakStmt
stmt -> Decl
FunCall -> ID ( FuncArgmt )
ExpStmt -> exp  
ExpStmt -> epsilon
exp -> ID = exp
exp -> ID *= exp
exp -> ID += exp
exp -> ID -= exp
exp -> ID /= exp
exp -> ID inc_op
exp -> expression
expression -> ( expression )
ReturnStmt -> return
ReturnStmt -> return exp
BreakStmt -> break
Input_Stmt -> read ID
Output_Stmt -> print expression
expression -> term arith_op expression
expression -> ID inc_op
expression -> NUMCONSTANT inc_op
expression -> term
term -> ID
term -> NUMCONSTANT
term -> FunCall
Decl -> Id_Type ID decls
decls -> , Id_Type ID decls
decls -> = exp decls
decls -> epsilon 
arith_op -> +
arith_op -> -
arith_op -> *
arith_op -> /
arith_op -> %
inc_op -> ++
IfElse_Stmt -> if ( Condition ) { stmts } else { stmts }
Condition -> expression rel_op expression
rel_op -> >
rel_op -> <
rel_op -> ==
